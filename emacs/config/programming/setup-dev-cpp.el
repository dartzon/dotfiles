;; ========================================================
(require 'modern-cpp-font-lock)
(modern-c++-font-lock-global-mode t)

;; ;; ========================================================

(require 'lsp-mode)

(lsp-define-stdio-client
 ;; This can be a symbol of your choosing. It will be used as a the
 ;; prefix for a dynamically generated function "-enable"; in this
 ;; case: lsp-prog-major-mode-enable
 lsp-c++-mode
 "c++"
 ;; This will be used to report a project's root directory to the LSP
 ;; server.
 (lambda () default-directory)
 ;; This is the command to start the LSP server. It may either be a
 ;; string containing the path of the command, or a list wherein the
 ;; car is a string containing the path of the command, and the cdr
 ;; are arguments to that command.
 '("/usr/bin/cquery" "--log-file=/tmp/cquery_log.txt '--init={\"extraClangArguments\":[\"-fno-ms-compatibility\", \"-fno-delayed-template-parsing\"]}' \"$@\""))

;; Here we'll add the function that was dynamically generated by the
;; call to lsp-define-stdio-client to the major-mode hook of the
;; language we want to run it under.
;;
;; This function will turn lsp-mode on and call the command given to
;; start the LSP server.
(add-hook 'prog-major-mode #'lsp-c++-mode-enable)

(setq lsp-highlight-symbol-at-point nil)

;; ========================================================

(require 'lsp-ui)
(add-hook 'lsp-mode-hook 'lsp-ui-mode)

;; ========================================================

(require 'cquery)
(setq cquery-executable "/usr/bin/cquery")
(setq cquery-extra-init-params '(:index (:comments 2) :cacheFormat "msgpack" :completion (:detailedLabel t)))
(setq lsp-ui-doc-include-signature nil)  ; don't include type signature in the child frame
(setq lsp-ui-sideline-show-symbol nil)  ; don't show symbol on the right of info
(lsp-cquery-enable)

;; ========================================================

(require 'company)
(global-company-mode)

(require 'company-lsp)
(push 'company-lsp company-backends)
(setq company-lsp-async t
      company-lsp-enable-snippet t
      company-lsp-enable-recompletion t
      company-transformers nil
      company-lsp-cache-candidates nil)


;; ========================================================

(require 'flycheck)
(flycheck-mode)

(provide 'setup-dev-cpp)
